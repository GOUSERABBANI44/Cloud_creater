# Create load_balancer
resource "aws_lb" "application" {
  internal           = false
  name               = "APPLI-LB"
  load_balancer_type = "application"
  security_groups    = [aws_security_group.sg.id]
  subnets            = [aws_subnet.pub-sub-1.id, aws_subnet.pub-sub-2.id]
}

resource "aws_lb_target_group" "tar" {
  name     = "target"
  port     = 80
  protocol = "HTTP"
  vpc_id   = aws_vpc.mvpc.id
  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    interval            = 30
    protocol            = "HTTP"
    port                = 80
    path                = "/ping"
    matcher             = 200
  }
}
resource "aws_lb_target_group_attachment" "att" {
  target_group_arn = aws_lb_target_group.tar.arn
  target_id        = aws_instance.app.id
  port             = 80
  depends_on       = [aws_instance.app,]
}

resource "aws_lb_target_group_attachment" "att2" {
  target_group_arn = aws_lb_target_group.tar.arn
  target_id        = aws_instance.app2.id
  port             = 80
  depends_on       = [aws_instance.app2,]
}

resource "aws_lb_listener" "lb-lis" {
  load_balancer_arn = aws_lb.application.arn
  port              = 80
  protocol          = "HTTP"
  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.tar.arn
  }
}


#getting the DNS of load-balancer
output "lb_dns_name" {
  description = "the name of the loadbalancer"
  value = "${aws_lb.application.dns_name}"
}